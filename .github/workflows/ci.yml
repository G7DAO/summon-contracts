name: Smart Contract CI

on: [push, pull_request]

env:
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  FOUNDRY_PROFILE: ci

jobs:
#  TODO: Uncomment this section to enable security audit when all the slither warnings are fixed
#  security_audit:
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18.x'
#          registry-url: 'https://registry.npmjs.org'
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#
#      - name: Install Slither
#        run: python -m pip install slither-analyzer
#
#      # Run Slither on all contracts except dependencies
#
#      - name: Run Slither
#        run: slither . --exclude-dependencies --include contracts/facets/Inventory.sol, contracts/Inventory.sol

  foundry_tests:
    runs-on: ubuntu-latest
    env:
      FOUNDRY_VERSION: ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-${{ env.FOUNDRY_VERSION }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/gakonst/foundry --bin forge --rev ${{env.FOUNDRY_VERSION}} --locked
      - run: forge test -vv

  hardhat_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Run Hardhat tests
        run: npx hardhat --config hardhat.config.ts test

#      - name: Enforce Coverage
#        run: npx istanbul check-coverage --statements 36.5 --branches 17.5 --functions 40 --lines 30

