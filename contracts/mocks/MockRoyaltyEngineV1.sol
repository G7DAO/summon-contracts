// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

// @author summon Team - https://summon.xyz
// @contributors: [ @ogarciarevett, @vasinl124]
//....................................................................................................................................................
//....................&&&&&&..........................................................................................................................
//..................&&&&&&&&&&&.......................................................................................................................
//..............X.....&&&&&&&&&&&&....................................................................................................................
//............&&&&&&.....&&&&&&&&&&&..................................................................................................................
//............&&&&&&&&&.....&&&&&.....................................................................................................................
//............&&&&&&&&&&&&.........&.............&&&&&&&&&&&&..&&&&....&&&&.&&&&&&&&..&&&&&&&.&&&&&&&&..&&&&&&&&.&&&&&&&&&&&&.&&&&&....&&&&...........
//...............&&&&&&&&&&&&.....&&$............&&&&..........&&&&....&&&&.&&&&&&&&.&&&&&&&&..&&&&&&&&.&&&&&&&&.&&&&&&&&&&&&.&&&&&&&..&&&&...........
//............&.....&&&&&&&&&&&&..................&&&&&&&&&&&..&&&&....&&&&.&&&&..&&&&&&.&&&&..&&&&.&&&&&&..&&&&.&&&&....&&&&.&&&&.&&&&&&&&...........
//............&&.......&&&&&&&&&&&&......................&&&&..&&&&&&&&&&&&.&&&&..&&&&&..&&&&..&&&&..&&&&...&&&&.&&&&&&&&&&&&.&&&&...&&&&&&...........
//................&&&.....&&&&&&&&&&+............&&&&&&&&&&&&...&&&&&&&&&&..&&&&...&&&&..&&&&.&&&&&..&&&&...&&&&.&&&&&&&&&&&&.&&&&....&&&&&...........
//.............&&&&&&&&&.....&&&&&&&..................................................................................................................
//.............&&&&&&&&&&&&.....&&&...................................................................................................................
//.................&&&&&&&&&&&........................................................................................................................
//....................&&&&&&&.........................................................................................................................
//....................................................................................................................................................

import {IRoyaltyEngineV1} from "../interfaces/IRoyaltyEngineV1.sol";

/**
 * @title MockRoyaltyEngineV1
 * @dev This contract is a mock for RoyaltyEngineV1
 */
contract MockRoyaltyEngineV1 is IRoyaltyEngineV1 {
    address payable[] private _recipients;
    uint256[] private _amounts;

    constructor() {
    }

    function setRoyalty(address payable[] memory recipients, uint256[] memory amounts) public {
        _recipients = recipients;
        _amounts = amounts;
    }

    function getRoyalty(
        address,
        uint256,
        uint256
    ) external view override returns (address payable[] memory recipients, uint256[] memory amounts) {
        return (_recipients, _amounts);
    }

    function getRoyaltyView(
        address,
        uint256,
        uint256
    ) external view override returns (address payable[] memory recipients, uint256[] memory amounts) {
        return (_recipients, _amounts);
    }

    function setRoyaltyInfo(address payable[] memory recipients, uint256[] memory amounts) public {
        _recipients = recipients;
        _amounts = amounts;
    }

    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {
        return interfaceId == type(IRoyaltyEngineV1).interfaceId;
    }
}
