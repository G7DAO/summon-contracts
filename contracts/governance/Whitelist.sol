// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

// @author summon Team - https://summon.xyz
// @contributors: [ @ogarciarevett, @vasinl124]
//....................................................................................................................................................
//....................&&&&&&..........................................................................................................................
//..................&&&&&&&&&&&.......................................................................................................................
//..............X.....&&&&&&&&&&&&....................................................................................................................
//............&&&&&&.....&&&&&&&&&&&..................................................................................................................
//............&&&&&&&&&.....&&&&&.....................................................................................................................
//............&&&&&&&&&&&&.........&.............&&&&&&&&&&&&..&&&&....&&&&.&&&&&&&&..&&&&&&&.&&&&&&&&..&&&&&&&&.&&&&&&&&&&&&.&&&&&....&&&&...........
//...............&&&&&&&&&&&&.....&&$............&&&&..........&&&&....&&&&.&&&&&&&&.&&&&&&&&..&&&&&&&&.&&&&&&&&.&&&&&&&&&&&&.&&&&&&&..&&&&...........
//............&.....&&&&&&&&&&&&..................&&&&&&&&&&&..&&&&....&&&&.&&&&..&&&&&&.&&&&..&&&&.&&&&&&..&&&&.&&&&....&&&&.&&&&.&&&&&&&&...........
//............&&.......&&&&&&&&&&&&......................&&&&..&&&&&&&&&&&&.&&&&..&&&&&..&&&&..&&&&..&&&&...&&&&.&&&&&&&&&&&&.&&&&...&&&&&&...........
//................&&&.....&&&&&&&&&&+............&&&&&&&&&&&&...&&&&&&&&&&..&&&&...&&&&..&&&&.&&&&&..&&&&...&&&&.&&&&&&&&&&&&.&&&&....&&&&&...........
//.............&&&&&&&&&.....&&&&&&&..................................................................................................................
//.............&&&&&&&&&&&&.....&&&...................................................................................................................
//.................&&&&&&&&&&&........................................................................................................................
//....................&&&&&&&.........................................................................................................................
//....................................................................................................................................................

import { AccessControl } from "@openzeppelin/contracts/access/AccessControl.sol";

contract Whitelist is AccessControl {
    bytes32 public constant MANAGER_ROLE = keccak256("MANAGER_ROLE");

    struct WhitelistData {
        bool isWhitelisted;
        string name;
        string email;
    }

    mapping(address => WhitelistData) public list;

    constructor(address developerAdmin) {
        _grantRole(DEFAULT_ADMIN_ROLE, developerAdmin);
        _grantRole(MANAGER_ROLE, developerAdmin);
    }

    event AddedToWhitelist(address indexed account);
    event RemovedFromWhitelist(address indexed account);

    function isWhitelisted(address _address) external view returns (bool) {
        return list[_address].isWhitelisted;
    }

    function addToWhitelist(
        address _address,
        string memory _name,
        string memory _email
    ) external onlyRole(MANAGER_ROLE) {
        list[_address].isWhitelisted = true;
        list[_address].name = _name;
        list[_address].email = _email;
        emit AddedToWhitelist(_address);
    }

    function removeFromWhitelist(address _address) external onlyRole(MANAGER_ROLE) {
        list[_address].isWhitelisted = false;
        emit RemovedFromWhitelist(_address);
    }
}
